---
name: "Build & Deploy Docker Image"

on:
  push:

permissions:
  contents: read

jobs:
  cli:
    runs-on: ubuntu-24.04

    strategy:
      fail-fast: false
      matrix:
        os: [linux]
        arch: [arm64, amd64]

    steps:
      - name: Checkout Code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: go.mod

      - name: Build the cli
        run: go build -o binaries/${{ matrix.os }}/${{ matrix.arch }}/multi-linters .
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}

      - name: Upload artifact
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: cli-${{ matrix.os }}-${{ matrix.arch }}
          path: binaries
          if-no-files-found: error

  git-metadata:
    runs-on: ubuntu-24.04

    outputs:
      iso8601: ${{ steps.timestamp.outputs.iso8601 }}
      epoch: ${{ steps.timestamp.outputs.epoch }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 # v4.2.0

      - name: Extract commit timestamp
        id: timestamp
        run: |
          echo "iso8601=$(git log -n1 --pretty=%cI)" >> "${GITHUB_OUTPUT}"
          echo "epoch=$(git log -n1 --pretty=%ct)" >> "${GITHUB_OUTPUT}"

      - name: Generate build summary
        run: |
          # We do not want quote expansion for markdown.
          # shellcheck disable=SC2016
          {
            echo '# Extracted metadata'
            echo 'iso8601: `${{ steps.timestamp.outputs.iso8601 }}`'
            echo 'epoch: `${{ steps.timestamp.outputs.epoch }}`'
          } >> "${GITHUB_STEP_SUMMARY}"

  build-deploy:
    runs-on: ubuntu-24.04

    needs:
      - cli
      - git-metadata

    steps:
      - name: Download cli binaries
        uses: actions/download-artifact@v4
        with:
          path: binaries
          pattern: cli-*
          merge-multiple: true

      - name: Make cli executable
        run: chmod +x -R binaries

      - name: List executables
        run: ls -R binaries

      - name: List executables
        run: ls -R binaries

      - name: Docker Metadata action
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        id: meta
        with:
          images: docker.io/lvjp/multi-linter
          labels: "org.opencontainers.image.created=${{ needs.git-metadata.outputs.iso8601 }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@988b5a0280414f521da01fcc63a27aeeb4b104db # v3.6.1

      - name: Login to Docker Hub
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@32945a339266b759abcbdc89316275140b0fc960 # v6.8.0
        with:
          build-contexts: multi-linters-binaries=binaries
          platforms: linux/amd64,linux/arm64
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        env:
          SOURCE_DATE_EPOCH: ${{ needs.git-metadata.outputs.epoch }}
